CREATE TABLE blumar.hotel (
    id_hotel BINARY(16) NOT NULL,
    cnpj INT NOT NULL,
    name VARCHAR(255) NOT NULL,
    ubicacion VARCHAR(255) NOT NULL,
    contacto INT NOT NULL,
    PRIMARY KEY (id_hotel)
);

---------------------------------------------------------------

CREATE TABLE blumar.quarto (
    id_quarto BINARY(16) NOT NULL,
    type VARCHAR(255) NOT NULL,
    numero INT NOT NULL,
    id_hotel BINARY(16),
    PRIMARY KEY (id_quarto),
    FOREIGN KEY (id_hotel) REFERENCES hotel(id_hotel)
);

---------------------------------------------------------------

CREATE TABLE blumar.cliente (
    id_cliente BINARY(16) NOT NULL,
    nome VARCHAR(255) NOT NULL,
    idade INT NOT NULL,
    cpf INT NOT NULL,
    tem_acompanhante BOOLEAN NOT NULL,
    nome_acompanhante VARCHAR(255),
    idade_acompanhante INT,
    cpf_acompanhante INT,
    PRIMARY KEY (id_cliente)
);
---------------------------------------------------------------

CREATE TABLE blumar.reserva (
    id_reserva BINARY(16) NOT NULL,
    data_entrada DATETIME NOT NULL,
    data_saida DATETIME,
    valor_unitario INT NOT NULL,
    cantidad_noites INT NOT NULL,
    id_quarto BINARY(16),
    id_pedido BINARY(16),
    PRIMARY KEY (id_reserva),
    FOREIGN KEY (id_quarto) REFERENCES quarto(id_quarto),
    FOREIGN KEY (id_pedido) REFERENCES pedido(id_pedido)
);

---------------------------------------------------------------

CREATE TABLE blumar.pedido (
    id_pedido BINARY(16) NOT NULL,
    valor_total INT NOT NULL,
    entrada DATETIME NOT NULL,
    id_cliente BINARY(16),
    PRIMARY KEY (id_pedido),
    FOREIGN KEY (id_cliente) REFERENCES cliente(id_cliente)
);

---------------------------------------------------------------------
one to many require a list

if i use one to many i need to use many to one in the other class

many to one use join column and @ManyToOne(fetch = FetchType.LAZY)

one to many needs (mappedBy = "cliente", cascade = CascadeType.ALL,fetch = FetchType.LAZY)


---------------------AUTOGENERATED-------------------------------
Hibernate: create table cliente (cpf_acompanhante integer, idade_acompanhante integer, tem_acompanhante bit not null, id_cliente binary(16) not null, nome_acompanhante varchar(255), primary key (id_cliente)) engine=InnoDB
Hibernate: create table hotel (cnpj integer not null, contacto integer not null, id_hotel binary(16) not null, name varchar(255), ubicacion varchar(255), primary key (id_hotel)) engine=InnoDB
Hibernate: create table pedido (valor_total integer, entrada datetime(6), id_cliente binary(16), id_pedido binary(16) not null, primary key (id_pedido)) engine=InnoDB
Hibernate: create table quarto (numero integer, id_hotel binary(16), id_quarto binary(16) not null, type enum ('INDIVIDUAL','CASAL','FAMILIAR','PRESIDENCIAL'), primary key (id_quarto)) engine=InnoDB
Hibernate: create table reserva (cantidad_noites integer, valor_unitario integer, data_entrada datetime(6), data_saida datetime(6), id_cliente binary(16), id_pedido binary(16), id_quarto binary(16), id_reserva binary(16) not null, primary key (id_reserva)) engine=InnoDB
Hibernate: alter table pedido add constraint FK9y4jnyp1hxqa386cnly0ay9uw foreign key (id_cliente) references cliente (id_cliente)
Hibernate: alter table quarto add constraint FKevu5ofmooyhqssl0d8q9c12it foreign key (id_hotel) references hotel (id_hotel)
Hibernate: alter table reserva add constraint FK33h3i3oapwncc68x5n11si6dc foreign key (id_cliente) references cliente (id_cliente)
Hibernate: alter table reserva add constraint FKndffxj0fe81nju4cggskrftin foreign key (id_pedido) references pedido (id_pedido)
Hibernate: alter table reserva add constraint FKaqooryn8wp9l3xysmcahpllhl foreign key (id_quarto) references quarto (id_quarto)

CREATE TABLE `cliente` (
  `cpf_acompanhante` int DEFAULT NULL,
  `idade_acompanhante` int DEFAULT NULL,
  `tem_acompanhante` bit(1) NOT NULL,
  `id_cliente` binary(16) NOT NULL,
  `nome_acompanhante` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id_cliente`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci

CREATE TABLE `hotel` (
  `cnpj` int NOT NULL,
  `contacto` int NOT NULL,
  `id_hotel` binary(16) NOT NULL,
  `name` varchar(255) DEFAULT NULL,
  `ubicacion` varchar(255) DEFAULT NULL,
  PRIMARY KEY (`id_hotel`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci

CREATE TABLE `pedido` (
  `valor_total` int DEFAULT NULL,
  `entrada` datetime(6) DEFAULT NULL,
  `id_cliente` binary(16) DEFAULT NULL,
  `id_pedido` binary(16) NOT NULL,
  PRIMARY KEY (`id_pedido`),
  KEY `FK9y4jnyp1hxqa386cnly0ay9uw` (`id_cliente`),
  CONSTRAINT `FK9y4jnyp1hxqa386cnly0ay9uw` FOREIGN KEY (`id_cliente`) REFERENCES `cliente` (`id_cliente`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci

CREATE TABLE `quarto` (
  `numero` int DEFAULT NULL,
  `id_hotel` binary(16) DEFAULT NULL,
  `id_quarto` binary(16) NOT NULL,
  `type` enum('INDIVIDUAL','CASAL','FAMILIAR','PRESIDENCIAL') DEFAULT NULL,
  PRIMARY KEY (`id_quarto`),
  KEY `FKevu5ofmooyhqssl0d8q9c12it` (`id_hotel`),
  CONSTRAINT `FKevu5ofmooyhqssl0d8q9c12it` FOREIGN KEY (`id_hotel`) REFERENCES `hotel` (`id_hotel`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci

CREATE TABLE `reserva` (
  `cantidad_noites` int DEFAULT NULL,
  `valor_unitario` int DEFAULT NULL,
  `data_entrada` datetime(6) DEFAULT NULL,
  `data_saida` datetime(6) DEFAULT NULL,
  `id_cliente` binary(16) DEFAULT NULL,
  `id_pedido` binary(16) DEFAULT NULL,
  `id_quarto` binary(16) DEFAULT NULL,
  `id_reserva` binary(16) NOT NULL,
  PRIMARY KEY (`id_reserva`),
  KEY `FK33h3i3oapwncc68x5n11si6dc` (`id_cliente`),
  KEY `FKndffxj0fe81nju4cggskrftin` (`id_pedido`),
  KEY `FKaqooryn8wp9l3xysmcahpllhl` (`id_quarto`),
  CONSTRAINT `FK33h3i3oapwncc68x5n11si6dc` FOREIGN KEY (`id_cliente`) REFERENCES `cliente` (`id_cliente`),
  CONSTRAINT `FKaqooryn8wp9l3xysmcahpllhl` FOREIGN KEY (`id_quarto`) REFERENCES `quarto` (`id_quarto`),
  CONSTRAINT `FKndffxj0fe81nju4cggskrftin` FOREIGN KEY (`id_pedido`) REFERENCES `pedido` (`id_pedido`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci

Hibernate: insert into hotel (cnpj,contacto,name,ubicacion,id_hotel) values (?,?,?,?,?)
Hibernate: insert into hotel (cnpj,contacto,name,ubicacion,id_hotel) values (?,?,?,?,?)
Hibernate: insert into quarto (id_hotel,numero,type,id_quarto) values (?,?,?,?)
Hibernate: insert into quarto (id_hotel,numero,type,id_quarto) values (?,?,?,?)
Hibernate: insert into quarto (id_hotel,numero,type,id_quarto) values (?,?,?,?)
Hibernate: insert into quarto (id_hotel,numero,type,id_quarto) values (?,?,?,?)
Hibernate: insert into cliente (cpf_acompanhante,idade_acompanhante,nome_acompanhante,tem_acompanhante,id_cliente) values (?,?,?,?,?)
Hibernate: insert into cliente (cpf_acompanhante,idade_acompanhante,nome_acompanhante,tem_acompanhante,id_cliente) values (?,?,?,?,?)
Hibernate: insert into cliente (cpf_acompanhante,idade_acompanhante,nome_acompanhante,tem_acompanhante,id_cliente) values (?,?,?,?,?)
Hibernate: insert into pedido (id_cliente,entrada,valor_total,id_pedido) values (?,?,?,?)
Hibernate: insert into reserva (cantidad_noites,id_cliente,data_entrada,data_saida,id_pedido,id_quarto,valor_unitario,id_reserva) values (?,?,?,?,?,?,?,?)
